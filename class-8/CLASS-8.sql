-- 1 Mode IN
-- Mode by default: we don't have to mention the MODE
-- Ex:
-- CREATE OR REPLACE PROCEDURE P_OCT_5_EX1(P_EMPNO ✨IN✨ NUMBER) AS

-- YOU PASS BY VALUE: EXEC P_OCT5_EX1(7369)
-- I CAN READ THE VALUE OF THE PARAMETER: V_VARIABLE := P_EMPNO
-- OR IN SELECT I ADD: WHERE EMPNO = P_EMPNO
-- 

-- 2 MODE OUT
-- WE HAVE TO MENTION THE MODE
-- CREATE OR REPLACE PROCEDURE P_OCT_5_EX2(P_EMPNO ✨OUT✨ NUMBER) AS
-- PASS BY VARIABLE, YOU WRITE INTO THE PARAMETER AND THE PARAMETER IS ON THE LEFT SIDE OF THE
-- ASSIGNING OPERATOR 
-- P_SALARY := V_VARIABLE
-- P_SALARY := 5000;
-- EXEC P_OCT5_EX2(V_SALARY)

-- EX 3: CREATE A PROCEDURE NAMED P_OCT_5_EX3 THAT HAS 3 PARAMETERS, THE FIRST ONE IS OF MODE IN,
-- TO ACCEPT THE EMPLOYEE NUMBER, THE OTHER TWO ARE OF MODE OUT TO SEND OUT THE SALARY AND THE NAME OF THE EMPLOYEE 

-- CREATE ANOTHER PROCEDURE THAT ACCEPTS AN EMPLOYEE NUMBER TO DISPLAY THE FOLLOWING:
    -- EMPLOYEE NUMBER X IS Y EARNING $Z A MONTH
    -- WHERE X IS THE EMPNO, Y AND Z ARE THE SALARY AND NAME RETURNED BY THE FIRST PROCEDURE (P_OCT_5_EX3)

CREATE OR REPLACE PROCEDURE P_OCT_5_EX3(P_EMPNO IN NUMBER, P_SAL OUT NUMBER, P_ENAME OUT VARCHAR2) AS
    V_ENAME EMP.ENAME%TYPE;
    V_SAL EMP.SAL%TYPE;
BEGIN
    SELECT ENAME, SAL
    INTO V_ENAME, V_SAL
    FROM EMP
    WHERE EMPNO = P_EMPNO;

    P_SAL := V_SAL;
    P_ENAME := V_ENAME;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('EMPLOYEE NUMBER ' || P_EMPNO || ' NO EXIST!');

END;
/

CREATE OR REPLACE PROCEDURE P_USE_EX3(P_EMPNO IN NUMBER) AS
    V_ENAME EMP.ENAME%TYPE;
    V_SAL EMP.SAL%TYPE;
BEGIN
    P_OCT_5_EX3(P_EMPNO, V_SAL, V_ENAME);
    IF V_SAL IS NOT NULL THEN
        DBMS_OUTPUT.PUT_LINE('EMPLOYEE NUMBER ' || P_EMPNO || ' IS ' || V_ENAME || ', EARNING $' || V_SAL || ' A MONTH.');
    END IF;
END;
/

EXEC P_USE_EX3(7369)
EXEC P_USE_EX3(8888)

-- MODE IN OUT
-- WE HAVE TO MENTION THE MODE 

-- EX 5: CREATE A PROCEDURE WITH 2 PAAMETERS OF MODE IN OUT. THE FIRST PARAMETER IS USED TO SEND IN THE EMPLOYEE NUMBER
-- AND SEND OUT THE SALARIES OF THE EMPLOYEE. THE SECOND PARAMETER IS USED TO SEND IN THE JOB AND SEND OUT THE NAME OF THE EMPLOYEE.
-- THE PROCEDURE WILL UPDATE THE JOB OF THE EMPLOYEE AND RETURN THE INCOME TAX OF THE EMPLOYEE USING THE SCALE BELOW:

-- >=5000 25% TAX
-- 4000 - 4999 20%
-- 3000 - 3999 15%
-- 2000 - 2999 10%
-- < 1999 5%

-- USING THE PROCEDURE JUST CREATED ABOVE, CREATE A PROCEDURE NAMED P_USE_EX5 THAT ACCEPTS AN EMPLOYEE NUMBER AND A JOB


-- CREATE OR REPLACE PROCEDURE P_USE_EX5(EMPNO NUMBER, P_JOB VARCHAR2) AS
--     V_EMPNO_TAX NUMBER := P_EMPNO;
--     V_JOB_ENAME VARCHAR2(40) : = P_JOB;
-- BEGIN
--     P_OCT5_EX5(V_EMPNO_TAX, V_JOB_ENAME);
-- END;
-- /

-- verify if you have the combination in the table or not, if not you have to insert
-- verify if the info is the same

-- verify c_id in a select can give you a not_data_found
-- verify for skill can give you a not_found

-- verify for status

create a counter or flag if the select c_id is good you change the flag to number 1 if not consultant does not exist
select for the skill if its good you update the flag to 2 if not, the combination does not exist, and then you insert
verify the status 

USE NVL function to replace when there's no commision with a number
